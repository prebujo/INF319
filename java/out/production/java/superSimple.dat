# amount of vehicles
param nv := 
1 ;

# amount of orders = orders + amount of vehicles
param no := 
1 ;

# 3 amount of unique locations (ficticious start and end location will be added in AMPL)
param nl := 
2 ;

# amount of factories
param nf := 
1 ;

# amount of distance instervals in cost structure
param na := 
1 1 ;

# amount of weight intervals in cost structure
param nb := 
1 1 ;

# Factory sets
set N_f_2[1] := 2 ;
 
# Hubstops capacities
param H := 
1 1 ;

# 9.1 Order pickup Location, have to create
param L_pd :=
1 1 ;

# 9.2 Order delivery Location, have to create
param L_dd :=
1 2 ;

# Location sets
set L_2[1] := 1 ;
set L_2[2] := 1 ;

# Weight of each Order
param Q_kg_2 := 
1 15 ;

# Volume of each Order
param Q_vol_2 := 
1 5 ;

# No pickup penalty cost
param C_2 := 
1 2000 ;

# Vehicle node sets
set N_v_2[1] := 1 2 ;

# pickup nodes
set N_vp[1] := 1 ;

# Capacity of each vehicle
param K_kg := 
1 25 ;

# Capacity of each vehicle
param K_vol := 
1 15 ;

# Distance interval for cost matrix
param B_2:=  
1 1 200 ;

# Weight interval for cost matrix
param Z_2:= 
1 1 25 ;

# Costs per km
param C_km := 
	1	1	1 	10	;
			
# Costs per kg
param C_kg := 
	1 	1	1 	2	;

# Costs fixed
param C_fix := 
	1 	1	1 	50	;
	
# Costs to make a stop
param C_stop_2 :=	
1 	1	10
1	2	10	;	

# Time window sets
param pi_2 := 
1 1	 
2 1 ;

# Time window lower bounds
param T_l_2:=
	1	1	0
	2	1	0 ;

# Time window upper bounds
param T_u_2:=
	1	1	10
	2	1	20 ;

# 26 Travel time
param T_2:=
	1 1 1 .
	1 1 2 15
	1 2 1 15
	1 2 2 . ;

# Travel Distance
param D_2:=
1 1 .
1 2 15
2 1 15
2 2 . ;


			
