#amount of vehicles
param nv := 3;

#amount of orders = orders + amount of vehicles
param nn := 7;

#amount of factories
param nf := 3;

#amount of distance instervals in cost structure
param na := 2;

#amount of weight intervals in cost structure
param nb := 2;

#amount of unique stop positions
param ns := 6;

#Factory sets
set N_f[1] := 8;
set N_f[2] := 9;
set N_f[3] := 10 11; 

#Location sets
set L[1] := 1;
set L[2] := 2;
set L[3] := 3 4;
set L[4] := 8;
set L[5] := 9;
set L[6] := 10 11;

#Vehicle node sets
set N_v[1] := 1 2 3 4 5 8 9 10 11 12;
set N_v[2] := 1 3 4 6 8 10 11 13;
set N_v[3] := 1 2 3 4 7 8 9 10 11 14;

#pickup nodes
set N_vp[1] := 1 2 3 4;
set N_vp[2] := 1 3 4; 
set N_vp[3] := 1 2 3 4;

#Time window sets
param pi := 1 1	 2 2  3 2  4 2 	5 1  6 1  7 1  8 2  9 2  10 2  11 2  12 1  13 1  14	1 ;

#Origin and destination of vehicles all 
param o_v := 1 5 2 6 3 7;
param d_v := 1 12 2 13 3 14;

#Costs per km
param C_km := 
	[1, *, *]: 	1	2	:=
			1 	0	0
			2	8	10	
	[2, *, *]: 	1	2	:=
			1 	0	0
			2	25	30	
	[3, *, *]: 	1	2	:=
			1 	0	0
			2	25	30	;
			
#Costs per kg
param C_kg := 
	[1, *, *]: 	1	2	:=
			1 	35	55
			2	0	0	
	[2, *, *]: 	1	2	:=
			1 	30	50
			2	0	0	
	[3, *, *]: 	1	2	:=
			1 	30	50
			2	0	0	;
			
#Costs fixed
param C_fix := 
	[1, *, *]: 	1	2	:=
			1 	150	200
			2	100	100	
	[2, *, *]: 	1	2	:=
			1 	0	200
			2	200	200	
	[3, *, *]: 	1	2	:=
			1 	0	200
			2	200	200	;
			
#Costs to make a stop
param C_stop :	1	2	3	4	5	6	7	8	9	10	11	12	13	14	:=
			1	10	10	10	10	0	0	0	10	10	10	10	0	0	0
			2	40	40	40	40	0	0	0	40	40	40	40	0	0	0
			3	40	40	40	40	0	0	0	40	40	40	40	0	0	0	;	

#No pickup penalty cost
param C := 1 2000 2 2000 3 2000 4 2000 5 0	6 0 7 0;

#Capacity of each vehicle
param K := 1 25 2 15 3 15;

#factory stops capacities
param H := 1 1 2 1 3 2;

#Weight of each Order
param Q := 1 9 2 9 3 7 4 7 5 0;

#Time window lower bounds
param T_l:	1 	2 :=
		1	0	.
		2	0	20
		3	0	12
		4	0	12
		5	0	.
		6	0	.
		7	0	.
		8	48	52
		9	10	25
		10	10	20
		11	10	20
		12	0	.	
		13	0	.
		14	0	.	;

#Time window upper bounds
param T_u: 	1 	2 :=
		1	10	.
		2	10	30
		3	10	20
		4	10	20
		5	100	.
		6	100	.
		7	100	.
		8	50	70
		9	15	35
		10	18	30
		11	18	30
		12	100	.	
		13	100	.
		14	100	.	;
		
#Travel time
param T:= 
	[1, *, *]:	1	2	3	4	5	8	9	10	11	12:=
			1	.	19	40	40	100	48	28	47	47	0
			2	19	.	50	50	100	29	11	52	52	0
			3	40	50	.	0	100	47	52	14	14	0
			4	40	50	0	.	100	47	52	14	14	0	
			5	0	0	0	0	.	0	0	0	0	0	
			8	48	29	47	47	100	.	21	38	38	0	
			9	28	11	52	52	100	21	.	50	50	0
			10	47	52	14	14	100	38	50	.	0	0
			11	47	52	14	14	100	38	50	0	.	0
			12	100	100	100	100	100	100	100	100	100	.

	[2, *, *]:	1	3	4	6	8	10	11	13	:=
			1	.	40	40	100	48	47	47	0
			3	40	.	0	100	47	14	14	0		
			4	40	0	.	100	47	14	14	0
			6	0	0	0	.	0	0	0	0
			8	48	47	47	100	.	38	38	0	
			10	47	14	14	100	38	.	0	0
			11	47	14	14	100	38	0	.	0
			13	100	100	100	100	100	100	100	.
			
	[3, *, *]:	1	2	3	4	7	8	9	10	11	14	:=
			1	.	19	40	40	100	48	28	47	47	0
			2	19	.	50	50	100	29	10	52	52	0	
			3	40	50	.	0	100	47	52	14	14	0		
			4	40	50	0	.	100	47	52	14	14	0
			7	0	0	0	0	.	0	0	0	0	0
			8	48	29	47	47	100	.	21	38	38	0	
			9	28	10	52	52	100	21	.	50	50	0
			10	47	52	14	14	100	38	50	.	0	0
			11	47	52	14	14	100	38	50	0	.	0
			14	100	100	100	100	100	100	100	100	100	.	;

#Travel Distance
param D:	1	2	3	4	5	6	7	8	9	10	11	12	13	14 :=
		1	0	19	40	40	100	100	100	48	28	47	47	0	0	0
		2	19	0	50	50	100	100	100	29	10	52	52	0	0	0
		3	40	50	0	0	100	100	100	47	52	14	14	0	0	0	
		4	40	50	0	0	100	100	100	47	52	14	14	0	0	0
		5	0	0	0	0	100	100	100	0	0	0	0	0	0	0
		6	0	0	0	0	100	100	100	0	0	0	0	0	0	0
		7	0	0	0	0	100	100	100	0	0	0	0	0	0	0
		8	48	29	47	47	100	100	100	0	21	38	38	0	0	0
		9	28	10	52	52	100	100	100	21	0	50	50	0	0	0
		10	47	52	14	14	100	100	100	38	50	0	0	0	0	0
		11	47	52	14	14	100	100	100	38	50	0	0	0	0	0
		12	100	100	100	100	100	100	100	100	100	100	100	100	100	100	
		13	100	100	100	100	100	100	100	100	100	100	100	100	100	100
		14	100	100	100	100	100	100	100	100	100	100	100	100	100	100	;

#Distance interval for cost matrix
param B:= 0 0 1 15 2 200;

#Weight interval for cost matrix
param Z:= 0 0 1 10 2 25;



		
				
				

